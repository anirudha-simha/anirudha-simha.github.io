name: deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your preferred LTS Node.js version
          cache: 'npm' # Or 'yarn' if you use yarn

      - name: Install dependencies
        run: npm ci # 'ci' is generally preferred for CI environments

      - name: Build application
        run: npm run build

      - name: Setup Pages
        # This action configures GitHub Pages for deployment
        uses: actions/configure-pages@v5

      - name: Upload artifact
        # This action uploads the build output (your 'dist' folder)
        uses: actions/upload-pages-artifact@v3
        with:
          # Path to the directory containing your static assets
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Sets the deployment URL output
    runs-on: ubuntu-latest
    needs: build # This job runs only after the 'build' job is successful
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        # This action deploys the uploaded artifact to GitHub Pages
        uses: actions/deploy-pages@v4